// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id               Int            @id @default(autoincrement())
    firstName        String
    lastName         String
    email            String         @unique
    phone            String?
    verificationCode String?
    codeExpiration   DateTime?
    queueDuration    Int
    createdAt        DateTime       @default(now())
    updatedAt        DateTime       @updatedAt
    Service          Service[]
    Queue            Queue[]
    WorkingTimes     WorkingTimes[]
}

model Service {
    id          Int     @id @default(autoincrement())
    serviceName String
    user        User    @relation(fields: [userId], references: [id])
    userId      Int
    Queue       Queue[]
}

model Queue {
    id            Int      @id @default(autoincrement())
    queueTime     DateTime
    service       Service  @relation(fields: [serviceId], references: [id])
    serviceId     Int
    user          User     @relation(fields: [userId], references: [id])
    userId        Int
    queueApproved Boolean  @default(false)
    client        Client   @relation(fields: [clientId], references: [id])
    clientId      Int
}

model WorkingTimes {
    id      Int    @id @default(autoincrement())
    user    User   @relation(fields: [userId], references: [id])
    userId  Int
    day     String
    opening String
    closing String
}

model Client {
    id               Int       @id @default(autoincrement())
    clientName       String
    clientEmail      String    @unique
    verificationCode String?
    codeExpiration   DateTime?
    Queue            Queue[]
}
